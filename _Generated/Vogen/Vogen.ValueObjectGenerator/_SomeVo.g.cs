// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618
// Suppress warnings for 'Override methods on comparable types'.
#pragma warning disable CA1036
// Suppress Error MA0097 : A class that implements IComparable<T> or IComparable should override comparison operators
#pragma warning disable MA0097
// Suppress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669, CS8632
// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591
#nullable enable
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "5.0.0.0")]
[global::System.Text.Json.Serialization.JsonConverter(typeof(SomeVoSystemTextJsonConverter))]
[global::System.ComponentModel.TypeConverter(typeof(SomeVoTypeConverter))]
[global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(SomeVoDebugView))]
[global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: System.String, Value = { _value }")]
// ReSharper disable once UnusedType.Global
public readonly partial struct SomeVo : global::System.IEquatable<SomeVo>, global::System.IEquatable<System.String>, global::System.IComparable<SomeVo>, global::System.IComparable, global::System.IParsable<SomeVo>
{
#if DEBUG
private readonly global::System.Diagnostics.StackTrace? _stackTrace = null!;
#endif
#if !VOGEN_NO_VALIDATION
    private readonly global::System.Boolean _isInitialized;
#endif
    private readonly System.String? _value;
    /// <summary>
    /// Gets the underlying <see cref = "System.String"/> value if set, otherwise a <see cref = "Vogen.ValueObjectValidationException"/> is thrown.
    /// </summary>
    public readonly System.String Value
    {
        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        get
        {
            EnsureInitialized();
            return _value!;
        }
    }

    [global::System.Diagnostics.DebuggerStepThroughAttribute]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public SomeVo()
    {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
#if !VOGEN_NO_VALIDATION
        _isInitialized = false;
#endif
        _value = default;
    }

    [global::System.Diagnostics.DebuggerStepThroughAttribute]
    private SomeVo(System.String value)
    {
        _value = value;
#if !VOGEN_NO_VALIDATION
        _isInitialized = true;
#endif
    }

    /// <summary>
    /// Builds an instance from the provided underlying type.
    /// </summary>
    /// <param name = "value">The underlying type.</param>
    /// <returns>An instance of this type.</returns>
    [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
    public static SomeVo From(System.String value)
    {
        return new SomeVo(value);
    }

    /// <summary>
    /// Tries to build an instance from the provided underlying type.
    /// If a normalization method is provided, it will be called.
    /// If validation is provided, and it fails, false will be returned.
    /// </summary>
    /// <param name = "value">The underlying type.</param>
    /// <param name = "vo">An instance of the value object.</param>
    /// <returns>True if the value object can be built, otherwise false.</returns>
    
#pragma warning disable CS8767 // Nullability of reference types in type of parameter doesn't match implicitly implemented member because of nullability attributes.

    public static bool TryFrom(
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]
#endif
    System.String? value,
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)]
#endif
 out SomeVo vo)
#pragma warning restore CS8767 // Nullability of reference types in type of parameter doesn't match implicitly implemented member because of nullability attributes.

    {
        if (value is null)
        {
            vo = default;
            return false;
        }

        vo = new SomeVo(value);
        return true;
    }

    /// <summary>
    /// Tries to build an instance from the provided underlying value.
    /// If a normalization method is provided, it will be called.
    /// If validation is provided, and it fails, an error will be returned.
    /// </summary>
    /// <param name = "value">The primitive value.</param>
    /// <returns>A <see cref = "Vogen.ValueObjectOrError{T}"/> containing either the value object, or an error.</returns>
    public static Vogen.ValueObjectOrError<SomeVo> TryFrom(System.String value)
    {
        if (value is null)
        {
            return new Vogen.ValueObjectOrError<SomeVo>(Vogen.Validation.Invalid("The value provided was null"));
        }

        return new Vogen.ValueObjectOrError<SomeVo>(new SomeVo(value));
    }

    [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
#if VOGEN_NO_VALIDATION
#pragma warning disable CS8775
  public readonly bool IsInitialized() => true;
#pragma warning restore CS8775
#else
    public readonly bool IsInitialized() => _isInitialized;
#endif
    public static explicit operator SomeVo(System.String value) => From(value);
    public static explicit operator System.String(SomeVo value) => value.Value;
    // only called internally when something has been deserialized into
    // its primitive type.
    private static SomeVo __Deserialize(System.String value)
    {
        return new SomeVo(value);
    }

    public readonly global::System.Boolean Equals(SomeVo other)
    {
        // It's possible to create uninitialized instances via converters such as EfCore (HasDefaultValue), which call Equals.
        // We treat anything uninitialized as not equal to anything, even other uninitialized instances of this type.
        if (!IsInitialized() || !other.IsInitialized())
            return false;
        return global::System.Collections.Generic.EqualityComparer<System.String>.Default.Equals(Value, other.Value);
    }

    public global::System.Boolean Equals(SomeVo other, global::System.Collections.Generic.IEqualityComparer<SomeVo> comparer)
    {
        return comparer.Equals(this, other);
    }

    public readonly global::System.Boolean Equals(System.String? primitive)
    {
        return Value.Equals(primitive);
    }

    public readonly global::System.Boolean Equals(System.String? primitive, global::System.StringComparer comparer)
    {
        return comparer.Equals(Value, primitive);
    }

    public readonly override global::System.Boolean Equals(global::System.Object? obj)
    {
        return obj is SomeVo && Equals((SomeVo)obj);
    }

    public static global::System.Boolean operator ==(SomeVo left, SomeVo right) => left.Equals(right);
    public static global::System.Boolean operator !=(SomeVo left, SomeVo right) => !(left == right);
    public static global::System.Boolean operator ==(SomeVo left, System.String? right) => left.Value.Equals(right);
    public static global::System.Boolean operator ==(System.String? left, SomeVo right) => right.Value.Equals(left);
    public static global::System.Boolean operator !=(System.String? left, SomeVo right) => !(left == right);
    public static global::System.Boolean operator !=(SomeVo left, System.String? right) => !(left == right);
    public int CompareTo(SomeVo other) => Value.CompareTo(other.Value);
    public int CompareTo(object? other)
    {
        if (other is null)
            return 1;
        if (other is SomeVo x)
            return CompareTo(x);
        ThrowHelper.ThrowArgumentException("Cannot compare to object as it is not of type SomeVo", nameof(other));
        return 0;
    }

    /// <summary>
    /// </summary>
    /// <returns>
    /// True if the value passes any validation (after running any optional normalization).
    /// </returns>
    public static global::System.Boolean TryParse(
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]
#endif
    global::System.String? s, global::System.IFormatProvider? provider,
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)]
#endif
 out SomeVo result)
    {
        if (s is null)
        {
            result = default;
            return false;
        }

        result = new SomeVo(s);
        return true;
    }

    /// <summary>
    /// </summary>
    /// <returns>
    /// The value created via the <see cref = "From(global::System.String)"/> method.
    /// </returns>
    /// <exception cref = "global::Vogen.ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>
    public static SomeVo Parse(global::System.String s, global::System.IFormatProvider? provider)
    {
        return From(s!);
    }

    public readonly override global::System.Int32 GetHashCode()
    {
        return global::System.Collections.Generic.EqualityComparer<System.String>.Default.GetHashCode(Value);
    }

    /// <summary>Returns the string representation of the underlying <see cref = "System.String"/>.</summary>
    public readonly override global::System.String ToString() => IsInitialized() ? Value.ToString() ?? "" : "[UNINITIALIZED]";
    [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
    private readonly void EnsureInitialized()
    {
        if (!IsInitialized())
        {
#if DEBUG
               ThrowHelper.ThrowWhenNotInitialized(_stackTrace);
#else
            ThrowHelper.ThrowWhenNotInitialized();
#endif
        }
    }

#nullable disable
    /// <summary>
    /// Converts a SomeVo to or from JSON.
    /// </summary>
    public class SomeVoSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<SomeVo>
    {
        public override SomeVo Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
        {
            return SomeVo.__Deserialize(reader.GetString());
        }

        public override void Write(System.Text.Json.Utf8JsonWriter writer, SomeVo value, global::System.Text.Json.JsonSerializerOptions options)
        {
            writer.WriteStringValue(value.Value);
        }
#if NET6_0_OR_GREATER
            public override SomeVo ReadAsPropertyName(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                return SomeVo.__Deserialize(reader.GetString());
            }

            public override void WriteAsPropertyName(System.Text.Json.Utf8JsonWriter writer, SomeVo value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WritePropertyName(value.Value);
            }
#endif
    }

#nullable restore
#nullable disable
    class SomeVoTypeConverter : global::System.ComponentModel.TypeConverter
    {
        public override global::System.Boolean CanConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
        {
            return sourceType == typeof(global::System.String) || base.CanConvertFrom(context, sourceType);
        }

        public override global::System.Object ConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value)
        {
            var stringValue = value as global::System.String;
            if (stringValue is not null)
            {
                return SomeVo.__Deserialize(stringValue);
            }

            return base.ConvertFrom(context, culture, value);
        }

        public override bool CanConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
        {
            return sourceType == typeof(global::System.String) || base.CanConvertTo(context, sourceType);
        }

        public override object ConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value, global::System.Type destinationType)
        {
            if (value is SomeVo idValue)
            {
                if (destinationType == typeof(global::System.String))
                {
                    return idValue.Value;
                }
            }

            return base.ConvertTo(context, culture, value, destinationType);
        }
    }

#nullable restore
#nullable disable
    internal sealed class SomeVoDebugView
    {
        private readonly SomeVo _t;
        SomeVoDebugView(SomeVo t)
        {
            _t = t;
        }

        public global::System.Boolean IsInitialized => _t.IsInitialized();
        public global::System.String UnderlyingType => "System.String";
        public global::System.String Value => _t.IsInitialized() ? _t._value.ToString() : "[not initialized]";
#if DEBUG
        public global::System.String CreatedWith => _t._stackTrace?.ToString() ?? "the From method";
#endif
        public global::System.String Conversions => @"Default";
    }

#nullable restore
    static class ThrowHelper
    {
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowInvalidOperationException(string message) => throw new global::System.InvalidOperationException(message);
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowArgumentException(string message, string arg) => throw new global::System.ArgumentException(message, arg);
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowWhenCreatedWithNull() => throw new global::Vogen.ValueObjectValidationException("Cannot create a value object with null.");
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowWhenNotInitialized() => throw new global::Vogen.ValueObjectValidationException("Use of uninitialized Value Object.");
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowWhenNotInitialized(global::System.Diagnostics.StackTrace? stackTrace) => throw new global::Vogen.ValueObjectValidationException("Use of uninitialized Value Object at: " + stackTrace ?? "");
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowWhenValidationFails(Vogen.Validation validation)
        {
            var ex = new global::Vogen.ValueObjectValidationException(validation.ErrorMessage);
            if (validation.Data is not null)
            {
                foreach (var kvp in validation.Data)
                {
                    ex.Data[kvp.Key] = kvp.Value;
                }
            }

            throw ex;
        }
    }
}
#nullable restore
